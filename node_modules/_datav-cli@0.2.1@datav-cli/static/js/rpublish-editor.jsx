var React = require('react');
var _ = require('lodash');
var $ = require('jquery');
var Store = require('./store');
var Action = require('./action');
var Reflux = require('../lib/reflux');
var GUI = require('/react-maliang-editor').GUI;

var TYPE = [
  {'平面映射': 'map_plate'},
  {'球形映射': 'map_earth'},
  {'大标题': 'text_maintitle'},
  {'分组说明': 'text_category'},
  {'柱状图': 'regular_bar'},
  {'条形图': 'regular_column'},
  {'饼图': 'regular_pie'},
  {'折线图': 'regular_line'},
  {'区域图': 'regular_area'},
  {'散点图': 'regular_scatterplot'},
  {'树图': 'regular_tree'},
  {'力导向': 'network_force'},
  {'单一数字': 'figure_num'},
  {'翻牌板': 'figure_board'},
  {'监控指标': 'figure_monitor'},
  {'进度条': 'figure_progress'},
  {'简单排序': 'order_table'},
  {'分组排序': 'order_sort'},
  {'辅助图形': 'decorate'}
]

var validate = {
  "view": {
    "name": '视窗',
    "type": 'group',
    "children": {
      "width": {
        "name": '宽度',
        "type": 'number',
        "step": 1,
        "default": 400
      },
      "height": {
        "name": '高度',
        "type": 'number',
        "step": 1,
        "default": 400
      },
      "minWidth": {
        "name": '最小宽度',
        "type": 'number',
        "step": 1,
        "default": 400
      },
      "minHeight": {
        "name": '最小高度',
        "type": 'number',
        "step": 1,
        "default": 400
      }
    }
  },
  "type": {
    "name": "组件类型",
    "type": "select",
    "options": TYPE,
    "default": null
  },
  "icon": {
    "type": "text",
    "name": "图标",
    "default": null,
    "description": "图片上传功能暂时关闭，请填写您的图片网络地址."
  },
  "version": {
    "type": "text",
    "name": "发布版本"
  }
}

var PublishEditor = React.createClass({
  mixins: [Reflux.connect(Store)],
  getInitialState: function () {
    var versionArr = window.share.version.split('.');
    versionArr[2] = parseInt(versionArr[2]) + 1;
    return {
      config: {
        view : {
          width : window.share.chartWidth,
          height: window.share.chartHeight,
          minWidth : window.share.chartMinWidth,
          minHeight: window.share.chartMinHeight
        },
        type : window.share.datav.type && window.share.datav.type[0] || '',
        version: versionArr.join('.'),
        icon: window.share.datav.icon || "//cdn-service.datav.aliyun.com/static/image/default-com-icon.png"
      }
    }
  },
  render: function () {
    return (<div className="gui-scroll-container" style={{
        width: '100%',
        height: '100%',
        overflow: 'scroll'
      }}>
      <GUI configObj={validate} valueObj={this.state.config} onChange={this.change} />
      <div className="shoot"><button className="shoot-button" onClick={this.publish}>发射{this.state.loading ? '...' : null}</button></div>
    </div>)
  },
  change: function (handler, handlerObj, rootObj, key, value) {
    window.share.chartWidth = rootObj.view.width;
    window.share.chartHeight = rootObj.view.height;
    window.share.chartMinWidth = rootObj.view.minWidth;
    window.share.chartMinHeight = rootObj.view.minHeight;
    window.share.datav.type = [rootObj.type];
    window.share.datav.icon = rootObj.icon;

    this.setState({
      config: rootObj
    });
  },
  publish: function () {
    if (this.state.loading) return;
    if (this.state.config.type === '') {
      alert('请选择图表类型');
      return;
    }
    var self = this;
    this.setState({
      loading: true
    })
    $.post('/publish', this.state.config, function (data) {
      data = JSON.parse(data);
      if (data.isError) {
        alert('提交失败:' + data.message);
        self.setState({
          loading: false
        })
      } else {
        alert('提交成功!');
        location.reload();
      }
    })
  }
});

module.exports = PublishEditor;