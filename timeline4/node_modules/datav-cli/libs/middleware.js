/**
 * Created by elvira on 16/4/7.
 */
var cube = require('node-cube');
var path = require('path');
var fs = require('xfs');

exports.cubeAdmin = cube.init({
  root: path.join(__dirname, '../static'),
  middleware: true,
  remote: 'static',
  moduleMap: {
    "react": "dist/react.js",
    "react-dom": "dist/react-dom.min.js"
  },
  "processors": {
    ".less": "cube-less",
    ".jsx": [
      "cube-react",
      ""
    ]
  },
  debug: true,
  maxAge: 3600 * 48 * 1000
})

exports.cubeUser = function (source) {
  var datavBase = path.join(source, '/datav_modules/');
  return cube.init({
    root: source,
    middleware: true,
    processors: {
      ".less": "cube-less"
    },
    remoteBase: {
      'datav' : 'http://com.datav.aliyun.com/cube/'
    },
    hooks: {
      beforeResolvePath: function(file) {
        var deal = false;
        if (/^\w+?:/.test(file)){
          var afile = file.replace(/\/\d+\.\d+\.\d+[^\/]*/, '');
          var _file = afile.split('datav:/com');
          var _path = path.join(datavBase, _file[1]);
          if (!path.extname(_path)) {
            if (fs.existsSync(_path+'.js')) {
              deal = true;
            } else if (fs.existsSync(path.join(_path, 'index.js'))) {
              deal = true;
            }
          }
          if (fs.existsSync(_path)) {
            deal = true;
          }
        }
        if (deal) return path.join('/datav_modules', _path.replace(datavBase, ''));
        if (deal) return afile.replace(/^datav:\/com/, 'local:');//
        return file;
      }
    },
    debug: true,
    maxAge: 3600 * 48 * 1000
  });
}