var $ = require('jquery');
var _ = require('lodash');
var React = require('react');
var Store = require('./store');
var Action = require('./action');
var Reflux = require('../lib/reflux');
var GUI = require('/react-maliang-editor').GUI;

var share = window.share;

var validate = {
  viewport: {
    "type": "group",
    "name": "视窗",
    "children": {
      "width": {
        "type": "number",
        "name": "宽度",
        "default": 400,
        "step": 1,
        "range": [0, 2000]
      },
      "height": {
        "type": "number",
        "name": "高度",
        "default": 400,
        "step": 1,
        "range": [0, 2000]
      }
    }
  }
}

var Resize = React.createClass({
  mixins: [Reflux.connect(Store)],
  getInitialState: function () {
    return {
      config: {
        viewport: {
          width : share.chartWidth,
          height: share.chartHeight
        }
      }
    }
  },
  render: function () {
    return (<div className="gui-scroll-container" style={{
        width: '100%',
        height: '100%',
        overflow: 'scroll'
      }}>
      <GUI configObj={validate} valueObj={this.state.config} onChange={this.change} uploadUrl="/icon_save/0" />
    </div>);
  },
  change: function (handler, handlerObj, rootObj, key, value) {
    var chart = this.state.parentCom;
    var chartDom = window.chartDom;

    chartDom.width(rootObj.viewport.width).height(rootObj.viewport.height);
    chart && chart.resize && chart.resize(rootObj.viewport.width, rootObj.viewport.height);

    window.share.chartWidth = rootObj.viewport.width;
    window.share.chartHeight = rootObj.viewport.height;

    this.setState({
      config: rootObj
    });
  }
});

module.exports = Resize;
